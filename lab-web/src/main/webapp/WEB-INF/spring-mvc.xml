<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"
        default-autowire="byName">

    <!--首先走默认的 web.xml 配置的servlet，没有的话才找对应controller -->
    <mvc:default-servlet-handler />
    <!--
    <mvc:resources mapping="/resources/js/**" location="/scripts/vendor/" />
    <mvc:resources mapping="/resources/css/**" location="/scripts/vendor/" />
    <mvc:resources mapping="/resources/styles/**" location="/styles/" />
    <mvc:resources mapping="/resources/directives/**" location="/scripts/directives/" />
    <mvc:resources mapping="/resources/controllers/**" location="/scripts/controllers/" />
    -->

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射,解决@ResponseBody乱码问题, 需要在annotation-driven之前,否则乱码问题同样无法解决 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <!-- Enables the Spring MVC @Controller programming dal -->
    <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
    <mvc:annotation-driven />

    <!-- 扫描controller（controller层注入） -->
    <context:component-scan base-package="com.ajayhao.simplelab.web" />
    <!--<context:component-scan base-package="com.ajayhao.simplelab.web.controller" />-->

    <!-- velocity模板配置 -->
    <bean id="velocityConfig"
          class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath"><!-- 页面文件的路径,相对于webapp -->
            <value>vm</value>
        </property>
        <property name="configLocation" value="/WEB-INF/velocity.properties" />
        <property name="velocityProperties">
            <props>
                <prop key="velocimacro.library">macros-default.vm</prop><!-- Velocimacro 模板库的列表 -->
                <!--<prop key="eventhandler.noescape.html.match">/(?:screen_content)|(?:noescape_.*)/</prop>-->
            </props>
        </property>
    </bean>

    <!-- 引入配置文件 -->
    <bean id="filePropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>WEB-INF/file.properties</value>
            </list>
        </property>
    </bean>


    <!-- view视图  -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="contentType" value="text/html;charset=UTF-8" />
        <!-- <property name="prefix" value="/velocity/" /> -->
        <property name="suffix" value=".vm" />
        <property name="toolboxConfigLocation" value="/WEB-INF/velocity-toolbox.xml" />
        <property name="layoutUrl" value="layout/default/mainframe.vm" />
        <property name="layoutKey" value="layout" />
        <property name="screenContentKey" value="screen_content" />
        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持 -->
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性 -->
        <property name="exposeSessionAttributes" value="true" />
        <property name="requestContextAttribute" value="rc" /><!--request属性引用名称 -->
        <!--<property name="order" value="1"/>-->
    </bean>

    <!-- 文件处理视图  -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="${file.upload.encoding}"></property>
        <property name="maxUploadSize" value="${file.upload.maxSize}"></property>
        <property name="maxInMemorySize" value="${file.upload.maxSizeInMemory}"></property>
    </bean>

    <!-- jsp视图  -->
    <bean id="jspResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
        <!--<property name="order" value="99"/>-->
    </bean>

    <!-- 普通html视图  -->
    <bean id="htmlResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/" />
        <property name="suffix" value=".html" />
        <!--<property name="order" value="99"/>-->
    </bean>


    <!-- 首页 地址映射 -->
    <!--<mvc:view-controller path="/" view-name="index"/>-->
</beans>